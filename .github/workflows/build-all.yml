name: CMake Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  VCPKG_COMMIT_ID: 'ad25766aefb5313b6bc4e2a4b78a2946f84fbf66'

jobs:
  build_and_test:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            cmake_preset: msvc22
            extra_args: -D ZQ_WITH_PROTO=OFF
            # there was this odd error that could not be reproduced locally on Windos 10 or 11
            #  -> Running cpp protocol buffer compiler on D:/a/zq/zq/proto/pingpong.proto
            # The system cannot find the batch label specified - VCEnd
            # error MSB8066
            # need to look into it extra ,but for now, disable proto on Windows
          - os: ubuntu-latest
            cmake_preset: ninja
          - os: macos-latest
            cmake_preset: xcode

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libtool autoconf automake lcov

      - name: Install dependencies on Mac
        if: matrix.os == 'macos-latest'
        run: |
          brew install lcov autoconf automake libtool

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.28.0"  # <--= optional, use most recent 3.25.x version
          ninjaVersion: "^1.12.0"  # <--= optional, use most recent 1.x version

      # it's not good to not test proto on Windows, but that accelerates the build for Windows
      - name: Remove protobuf from vcpkg.json on Windows
        run: |
          (Get-Content -path vcpkg.json) | Where-Object { $_ -notmatch '^\s*"protobuf",\s*$' } | Set-Content -Path vcpkg.json
        shell: pwsh
        if: matrix.os == 'windows-latest'

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ env.VCPKG_COMMIT_ID }}'
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Configure CMake
        run: |
          cmake --version
          cmake --preset ${{ matrix.cmake_preset }} ${{ matrix.extra_args }}

      - name: Build
        run: |
          cmake --build --preset ${{ matrix.cmake_preset }} --verbose

      - name: Test
        run: |
          ctest --preset ${{ matrix.cmake_preset }} --output-on-failure


  coverage:
    uses: ./.github/workflows/build-coverage.yml


